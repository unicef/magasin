# Drill Image repository
repo: hub.docker.com/u/

# Drill sub-section
drill:
  # Name of the Drill cluster. Also used to create the ZK node for the Drill cluster
  id: drill
  
  # Expose Drill Web UI outside of the cluster?
  # This will open a port, so that the dill UI can accessed from outside of the cluster.
  # Otherwise you can use kubectl port-forward to access the UI.
  exposeWebService: false
  # What kind of service [LoadBalancer|NodePort]
  webServiceType: LoadBalancer
  # Number of Drill Pods which are launched in parallel and join to form a Drill Cluster
  count: 2
  # Total memory for each Drill pod
  memory: 5Gi
  # Total CPU for each Drill pod
  cpu: 4000m
  # Drill image with tag
  image: merlos/drill:1.21.2-2024-12
  # Drill's HTTP port
  httpPort: 8047
  # User Server port. The Bit Server Port and Data Server ports are +1 and +2
  userServerPort: 31010
  # Periodically, a diagnostic is performed to check the 'liveness' of a Drill container
  # The livenessProbe indicates whether the Container is running. If the probe fails, it's restarted
  livenessProbe:
    exec:
      # The absolute path of the liveness probe script on the pod
      command:
        - sh
        - -c
        - /opt/drill/bin/isLive.sh
    # Number of seconds after the container has started before probes are initiated
    # (to account for time taken by Drillbit process to start)
    initialDelaySeconds: 10
    # Number of seconds after which to retry probes
    periodSeconds: 30
    # Number of seconds after which probes time out
    timeoutSeconds: 10
    # Number of retries in case of probe failures
    failureThreshold: 10
  # Periodically, a diagnostic is performed to check the 'readiness' of a Drill container
  # The readinessProbe indicates whether the Container is ready to service requests. If the probe fails,
  # the Pod's IP address is removed from the endpoints of all Services that match the Pod
  readinessProbe:
    exec:
      # The absolute path of the readiness probe script on the pod
      command:
        - sh
        - -c
        - /opt/drill/bin/isReady.sh
    # Number of seconds after the container has started before probes are initiated
    # (to account for time taken by Drillbit process to start)
    initialDelaySeconds: 10
    # Number of seconds after which to retry probes
    periodSeconds: 30
    # Number of seconds after which probes time out
    timeoutSeconds: 10
    # Number of retries in case of probe failures
    failureThreshold: 5
  # Lifecycle hooks
  lifecycle:
    # During a scale down of the Drill Cluster, a preStop hook is executed on the pod replicas
    # that are to be brought down, which instructs the Drillbit process to gracefully shutdown
    preStop:
      exec:
        # The absolute path of the preStop script on the pod
        command:
          - sh
          - -c
          - /opt/drill/bin/preStop.sh
  # Number of seconds after which pods are forcefully killed
  # Note: Lower values may cause running queries to fail
  terminationGracePeriodSeconds: 60
  # set the k8s priority of drill pods, see 
  # https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  # priorityClassName: <your-priorityclass>

  # The size of the Drill cluster (number of Drill Pod replicas) can be autoscaled
  # With higher CPU utilization, more drill-bits are added automatically. And as the load goes down,
  # so do the number of drill-bits in the Drill Cluster (by gracefully shutting down)
  autoscale:
    # Flag to turn-on / turn-off this option
    enabled: false
    # Maximum number of Drill Pods
    maxCount: 4
    # Target CPU Utilization Percentage
    cpuThreshold: 75


  volumes:
    # Make true if you want to add any volumes. Else, make false.
    add: true
    # Drill Configuration can be overridden by mounting them on each Drill container.
    configOverrides:
      # Contents of drill-override.conf
      # This file follows the HOCON format
      # https://github.com/lightbend/config/blob/master/HOCON.md
      # The available options are described in
      # https://drill.apache.org/docs/configuration-options-introduction/
      drillOverrideConf: |
        drill.exec.options.exec.errors.verbose: true
        
      # Contents of drill-env.sh. This script is run prior to launching the drillbit
      drillEnvSh: |
        echo "Running drill-env.sh..."
        # Display some info about the runtime
        echo PATH=$PATH
        echo User=`whoami`
        export DRILL_PID_DIR="/opt/drill"

        #...
    
    # Drill Storage Plugin can be overridden
    # 
    drillStorage:
      override: false
      secretName: drill-storage-plugin-secret
      mountPath: /opt/drill/conf/storage-plugins-override.conf
      subPath: storage-plugins-override.conf

  # set annotations to drill pod
  podAnnotations: {}
    # responsible: devops
    # stage: prod

  # set the affinity of your drill pods
  # see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #affinity: {}

# ZooKeeper sub-section
zookeeper:
  # Name of the ZooKeeper quorum (currently single-node configuration only)
  id: zk
  # Total memory for each ZooKeeper pod
  memory: 2Gi
  # Total CPU for each ZooKeeper pod
  cpu: 500m
  # ZooKeeper image with tag
  image: merlos/zookeeper:3.9.3
  # set annotations to ZooKeeper pods
  podAnnotations: {}
    # responsible: devops
    # stage: prod
  # set the k8s priority of ZooKeeper pods
  # see https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  # priorityClassName: <your-priorityclass>

  # set the affinity of your drill pods
  # see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  #affinity: {}
