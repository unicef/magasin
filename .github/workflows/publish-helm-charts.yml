#
# Publish Magasin Helm charts in the gh-pages branch
# It creates a release.
#
# Reference documentation
#
# What needs to be setup in Github
# https://helm.sh/docs/topics/chart_repository/#github-pages-example
# Chart releaser action 
# https://helm.sh/docs/howto/chart_releaser_action/
# Chart releaser action GH Marketplace page
# https://github.com/marketplace/actions/helm-chart-releaser
#

name: Publish helm charts

on:
  # On tag creation
  push:
    tags: 
      # Only run on tags that have the vX.Y.Z; Example v0.1.1
      - v[0-9]+.[0-9]+.[0-9]+
        
  # Manual run of the 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag. Use format: vX.Y.Z'
        default: 'v0.0.1'
        required: true
        type: string
      action:
          # What action to perform
          description: 'Release action. Edit adds the assets and updates the index'
          default: create
          required: true
          type: choice
          options:
            - create
            - edit

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
      
      - name: Install hub
        run: |
            sudo apt install -y hub

      - name: Display the Input options 
        run: |
          echo  "tag:    ${{ inputs.tags }}"
          echo  "action: ${{ inputs.action}}"

      - name: Manually make helm packages (.tgz)
        id: helm_package
        run: |
          # Create destination folder
          mkdir .helm-packages
          # lists all folders in helm. 
          for dir in `ls -d helm/ */ | sed 's/\/$//'`; do 
            echo Creating package for helm/$dir...
            # Creates a .tgz file for each folder in helm
            helm package helm/$dir -d ./helm-packages 
          done
          # Sets output dir as a variable. Can be accessed using ${{ steps.helm_package.dir }}
          echo "::set-output name=dir::.helm-packages"
        
      #- name: Run chart-releaser
      #  uses: helm/chart-releaser-action@v1.6.0
      #  with:
      #    # defaults to "charts", and looks for folders"
      #    charts_dir: helm
      #    skip_packaging: true # expect helm charts .tgz .cr-release-packages
      #    packages_with_index: true # upload to gh-pages
      #  env:
      #    CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
     
      - name: Create/Edit a GitHub release using hub
        run: |  
          set -x
          echo Using helm pacakges dir: ${{ steps.helm_package.dir }}
          assets=()
          for asset in `ls ./helm-packages`; do
            assets+=("-a" "./helm-packages/$asset")
          done
          echo The folowing assets will be added to the release: $assets 
          hub release ${{ inputs.action}} "${assets[@]}" "${{ inputs.tag }}"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      
      # Now proceed to update the index in github
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'
          path: 'gh-pages'


      - name: Push new index
        run: |
          # Go to helm folder
          cd .helm-packages
          # Merge index
          helm index --merge ../gh-pages/index.yaml --url "https://github.com/$GITHUB_REPOSITORY}/releases/download/${{ inputs.tag }}"
          cat ../gh-pages/index.yaml
          # 
          cd ../gh-pages/
          git add .
          git commit -m "update index.yaml for ${{ inputs.tag }}"
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    